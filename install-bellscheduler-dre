#! /bin/bash

clear
# Variables 
#
ROJO="\033[1;31m"
NORMAL="\033[0m"
AZUL="\033[1;34m"
DISTRO=$(lsb_release -cs)
CPU=$(uname -m)

# Establecer la cpu en la que se basa el dispositivo.
# 
	if [[ $CPU = armv7l ]]
	then
        	BASED=armv7l
    	elif
    	[[ $CPU = aarch64 ]]
    	then
        	BASED=aarch64
    	else
        	echo ""
		echo -e "${ROJO}Esta instalación no es compatible con tu sistema${NORMAL}" 
		echo ""
		echo -e "${ROJO}This install process is not compatible with your system${NORMAL}"
		echo ""
		sleep 4
		exit
    	fi

	echo ""
	echo CPU $CPU
    	echo ""
	echo System based on $DISTRO
	echo ""
	sleep 2
# Cambiamos la salida de audio al jack de salida 3.5
	echo ""	
	echo -e "${ROJO}No olvides cambiar la salida de audio al jack 3.5 mm${NORMAL}"
	echo ""
	echo -e "${ROJO}Don't forget to change audio output to 3.5 mm jack raspberry pi${NORMAL}"
	echo ""
	sudo echo ""
	#amixer cset numid=3 1
	sleep 4

# Este script funciona en PI OS o sistemas arm.
#
	echo ""	
	echo -e "${ROJO}Solicitando contraseña del usuario con derechos de administrador${NORMAL}"
	echo ""
	echo -e "${ROJO}Asking password of the user with administrations rights${NORMAL}"
	echo ""
	sudo echo ""

# # Función que repara la hora del sistema conectado por WIFI en cada inicio.
# ---

if [[ -f /usr/bin/fix-ntp ]]; then
	echo -e "${AZUL}Ya estaba corregida la hora por NTP${NORMAL}"
	return
	fi
	
	# Aplicamos el cambio
	# ---

    sudo timedatectl set-timezone Europe/Madrid
    sudo cp ./ntp/fix-ntp /usr/bin
    sudo chmod +x /usr/bin/fix-ntp
    sudo chown root:root ./ntp/zz-fix-ntp
    sudo chmod 0440 ./ntp/zz-fix-ntp
    sudo cp ./ntp/zz-fix-ntp /etc/sudoers.d/ 
    sudo cp ./ntp/fix-ntp.desktop /etc/xdg/autostart/
    echo -e "${ROJO}Fix-ntp time instalado${NORMAL}"
    
# Instala el servicio de compartición en red local SAMBA

  sudo apt install samba samba-common-bin -y

# Copia la configuración para compartir la carpeta BELLSCHEDULER
  sudo cp smb.conf /etc/samba/
  sudo mkdir -p /home/$USER/BELLSCHEDULER
  sudo chown -R $USER:$USER /home/$cd USER/BELLSCHEDULER

# Establece contraseña para el usuario PI. Hay que introducir la contraseña dos veces.
  echo ""
  echo ""
  echo -e "${AZUL}Introduza a continuación una contraseña asociada al usuario pi,${NORMAL}"
  echo -e "${AZUL}para compartir archivos en red local${NORMAL}"
  echo -e "${AZUL}por ejemplo la copia de seguridad de las alarmas o los sonidos${NORMAL}"
  sudo smbpasswd -a pi

# Reinicia y activa el servicio SAMBA en el equipo

  sudo systemctl restart smbd
  sudo systemctl enable smbd
  echo -e "${ROJO}Instalado SAMBA${NORMAL}"
	
# Borrando antiguos archivos de bellscheduler-dre
#
	echo ""	
	echo -e "${ROJO}Borrando si existen archivos de anteriores instalaciones${NORMAL}"
	echo ""
	echo -e "${ROJO} Deleting if there are files from previous installations${NORMAL}"
	echo ""
	sudo chmod +x uninstall-bellscheduler-dre
	sudo ./uninstall-bellscheduler-dre
	

	echo ""
	echo -e "${AZUL}continúa el script...${NORMAL}"
	echo ""
	echo -e "${AZUL}the script continues...${NORMAL}"
	echo ""

# Instalar docker
#
	echo ""
	echo -e "${AZUL}Instalando Docker...${NORMAL}"
	echo ""
	echo -e "${AZUL}Installing Docker...${NORMAL}"
	echo ""
	sudo apt update
	sudo apt install -f
	sudo apt-get install screen gir1.2-appindicator3-0.1 apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y
	sudo apt install -f
	sudo curl -fsSL https://download.docker.com/linux/raspbian/gpg | sudo apt-key add -
	#sudo add-apt-repository "deb [arch=armhf] https://download.docker.com/linux/raspbian $DISTRO stable"
	touch docker.list
	echo "deb [arch=armhf] https://download.docker.com/linux/raspbian $DISTRO stable" > docker.list
	sudo mv docker.list /etc/apt/sources.list.d/docker.list
	sudo apt-key fingerprint 0EBFCD88
	sudo apt update
	sudo apt install docker-ce docker-ce-cli containerd.io -y 
	#sudo usermod -aG docker $USER
	sudo rm /etc/apt/sources.list.d/docker.list
	
	sudo systemctl stop docker
	sudo systemctl start docker

# Descarga la imagen docker
#
	echo ""
	echo -e "${AZUL}Descargando la imagen docker que contiene la app...${NORMAL}"
	echo ""
	echo -e "${AZUL}Downloading the docker image with the app...${NORMAL}"
	echo ""
	sudo docker pull aosucas499/bellscheduler-dre:armhf

# Hacer la aplicación iniciable en cada reinicio y usable para cualquier usuario sin "sudo"
#
	echo ""
	echo -e "${AZUL}Configurando la app para que arranque en cada inicio de sesión...${NORMAL}"
	echo ""
	echo -e "${AZUL}Settings up the app to boot at init...${NORMAL}"
	echo ""
	sudo cp bellscheduler-dre /usr/bin
    	sudo chmod +x /usr/bin/bellscheduler-dre
    	sudo chown root:root zz-bellscheduler-dre
    	sudo chmod 0440 zz-bellscheduler-dre
    	sudo cp zz-bellscheduler-dre /etc/sudoers.d/ 
    	#sudo cp bellscheduler-dre.desktop /etc/xdg/autostart/
    	sudo cp bellscheduler-dre.desktop /usr/share/applications/
	
# Copiar la aplicación bellscheduler-dre-appindicator en la carpeta python
#

	echo ""
	echo -e "${AZUL}Instalando la app de la barra del sistema para parar la música...${NORMAL}"
	echo ""
	echo -e "${AZUL}Installing system tray icon to stop music...${NORMAL}"
	echo ""
	sudo cp -r bellscheduler-dre-appindicator /usr/lib/python3/dist-packages
	sudo cp bellscheduler-dre-appindicator/bellscheduler-dre-appindicator.desktop /etc/xdg/autostart/
	
# Añadir iconos originales al sistema
#
	sudo cp  icons/bell-scheduler.png /usr/share/icons

# Crear grupo necesario para acceder a la aplicación bell-scheduler	
# y se añade el usuario al grupo 
	sudo groupadd teachers
	sudo usermod -a -G teachers $USER
	
# Notificaciones al terminar
#
	echo ""
	echo -e "${ROJO}Reinicie el equipo para que se ejecute la aplicación${NORMAL}"
	echo ""
	
# Borrar los repositorios de git y archivos de instalación
#
	cd ..
	sudo rm -r bellscheduler-pi
